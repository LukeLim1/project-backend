diff --git a/src/auth.test.js b/src/auth.test.js
index 918ef43..96a8c23 100644
--- a/src/auth.test.js
+++ b/src/auth.test.js
@@ -7,6 +7,16 @@ describe('authRegisterV1', () => {
     beforeEach ( () => {
         clearV1();  
     });
+
+    /* =============================================================================
+    == TAM'S COMMENT ==
+    ===================
+        
+        For some of these error cases, as they have similar structures, you should
+        consider `test.each()` :). See lab03_password for an example.
+
+    ============================================================================= */
+
     describe('Error cases', () => {
         test('Invalid email', () => {   
             const regTest = authRegisterV1('zachary.co', 'z5312386', 'Zachary', 'Chan'); 
@@ -83,6 +93,14 @@ describe('authLoginV1', () => {
         const data = getData();
         const regTest = authRegisterV1('zachary-chan@gmail.com', 'z5312386', 'zachary', 'chan');
         const loginTest = authLoginV1('zachary-chan@gmail.com', 'z5312386');
+
+        /* =============================================================================
+        == TAM'S COMMENT ==
+        ===================
+            
+            use toStrictEqual instead of toMatchObject! See the API for differences
+
+        ============================================================================= */
         expect(loginTest).toMatchObject(regTest); 
     });
     
@@ -92,6 +110,16 @@ describe('authLoginV1', () => {
         loginFail = authLoginV1('failing-test@gmail.com', 'shouldntWork'); 
     });
     
+
+    /* =============================================================================
+    == TAM'S COMMENT ==
+    ===================
+        
+        to Strict Equal! Also, what's the differnence between the tests below,
+        other than their names?
+
+    ============================================================================= */
+
     test("Returns error object when loginUserId doesnt match a registered userId", () => {
         expect(loginFail).toMatchObject({error: 'error'});
     });
diff --git a/src/channel.test.js b/src/channel.test.js
index 019eb7c..751a503 100644
--- a/src/channel.test.js
+++ b/src/channel.test.js
@@ -3,11 +3,30 @@ import { channelsCreateV1 } from './channels.js';
 import {authRegisterV1} from './auth.js';
 import {clearV1} from './other.js';
 
+
+/* =============================================================================
+== TAM'S COMMENT ==
+===================
+
+Good overall, but use more set-up and teardown to reduce repeated code.
+For example, beforeEach.
+
+============================================================================= */
+
 test('Testing successful channelDetailsV1 and channelJoinV1', () => {
     clearV1();
     const owner = authRegisterV1('owner@email.com', '123456', 'Ada', 'Bob');
     const user1 = authRegisterV1('user1@email.com', '987654', 'Ocean', 'Hall');
     const channel1 = channelsCreateV1(owner.authUserId, 'channel#1', true);
+
+    /* =============================================================================
+    == TAM'S COMMENT ==
+    ===================
+
+        Use toStrictEqual instead!
+
+    ============================================================================= */
+
     expect(channelJoinV1(user1.authUserId, channel1.channelId)).toMatchObject({});
 
     expect(channelDetailsV1(owner.authUserId, channel1.channelId)).toMatchObject(
@@ -121,6 +140,14 @@ describe('channelInviteV1', () => {
 
 // Tests for channelMessageV1
 describe('channelMessagesV1', () => {
+
+    /* =============================================================================
+    == TAM'S COMMENT ==
+    ===================
+
+        Nicely done.
+
+    ============================================================================= */
     let channelID, uID, authUserID, start, message;
     beforeEach ( () => {
         clearV1();
diff --git a/src/channels.test.js b/src/channels.test.js
index 5ebfe6f..6d8ea78 100644
--- a/src/channels.test.js
+++ b/src/channels.test.js
@@ -6,6 +6,17 @@ beforeEach(() => {
     clearV1();
     const data = getData();  
 });
+
+
+/* =============================================================================
+== TAM'S COMMENT ==
+===================
+
+    - Use set-up and teardown, e.g. beforeEach :).
+    - Also, toStrictEqual
+
+============================================================================= */
+
 describe('ChannelsCreateV1 returns correct data information', () => {
     test('Channel is created', () => {
         //const data = getData();
@@ -21,6 +32,16 @@ describe('ChannelsCreateV1 returns correct data information', () => {
     test('Channel name length is longer than 20', () => {
         
         const regTest = authRegisterV1('zachary@gmail.com', 'z5312386', 'Zachary', 'Chan'); 
+
+        /* =============================================================================
+        == TAM'S COMMENT ==
+        ===================
+
+            clearer might be 
+            ```
+            'a'.repeat(20 + 1)
+            ```
+        ============================================================================= */
         const namedChannel = channelsCreateV1(regTest, 'thisisanamethatwillbelongerthan20chars', true );
         expect(namedChannel).toMatchObject({error: 'error'})
     });
diff --git a/src/users.test.js b/src/users.test.js
index d8c0275..ceea1a5 100644
--- a/src/users.test.js
+++ b/src/users.test.js
@@ -34,6 +34,14 @@ describe('authRegisterV1', () => {
 
     describe('No errors', () => {
         test('profile success', () => {
+
+            /* =============================================================================
+            == TAM'S COMMENT ==
+            ===================
+                
+                const :)
+
+            ============================================================================= */
             let returnUser = {
                 uId: uId,
                 email: 'yoloemail@gmail.com',
